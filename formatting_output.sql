create database formatting_output;
use formatting_output;
create table salesman(salesman_id int primary key,
name varchar(20) not null,
city varchar(20),
commision float);

insert into salesman(salesman_id,name,city,commision) values 
(5001,'James Hoog','New York',0.15),
(5002,'Nail Knite','Paris',0.13),
(5005,'Pit Alex','London',0.11),
(5006,'Mc Lyon','Paris',0.14),
(5003,'Lauson Hen','',0.12),
(5007,'Paul Adam','Rome',0.13);

select * from salesman;

create table customer(customer_id int primary key,
customer_name varchar(20) not null,
city varchar(20),
grade int,
salesman_id int,
foreign key (salesman_id) references salesman(salesman_id));

insert into customer(customer_id,customer_name,city,grade,salesman_id) values 
(3002,'Nick Rimando','New York',100,5001),
(3005,'Graham Zusi','California',200,5002),
(3001,'Brad Guzan','London',null,null),
(3004,'Fabian Johns','Paris',300,5006),
(3007,'Brad Davis','New York',200,5001),
(3009,'Geoff Camero','Berlin',100,null),
(3008,'Julian Green','London',300,5002),
(3003,'Jozy Altidor','Moncow',200,5007);

select * from customer;

set sql_safe_updates = 0;

CREATE TABLE orders (
    order_no INT PRIMARY KEY,
    purch_amt DECIMAL(10,2),
    order_date DATE,
    customer_id INT,
    salesman_id INT,
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),
    FOREIGN KEY (salesman_id) REFERENCES salesman(salesman_id)
);

INSERT INTO orders (order_no, purch_amt, order_date, customer_id, salesman_id)
VALUES 
(70001, 150.50, '2016-10-05', 3005, 5002),
(70009, 270.65, '2016-09-10', 3001, NULL),
(70002, 65.26, '2016-10-05', 3002, 5001),
(70004, 110.50, '2016-08-17', 3009, NULL),
(70007, 948.50, '2016-09-10', 3005, 5002),
(70005, 2400.60, '2016-07-27', 3007, 5001),
(70008, 5760.00, '2016-09-10', 3002, 5001),
(70010, 1983.43, '2016-10-10', 3004, 5006),
(70003, 2480.40, '2016-10-10', 3009, NULL),
(70012, 250.45, '2016-06-27', 3008, 5002),
(70011, 75.29, '2016-08-17', 3003, 5007);

select * from orders;

# 1) From the salesman table, write a SQL query to select all the salespeople. Return salesman_id, name, city, commission with the percent sign (%).
select salesman_id, name, city,'%', commision * 100 from salesman;

# 2) From the following table, write a SQL query to find the number of orders booked for each day.
# Return the result in a format like "For 2001-10-10 there are 15 orders".
select 'for',order_date,'there are', count(order_no),'orders' from orders
group by order_date;

# 3) From the orders table, write a SQL query to find all the orders. Sort the result-set in ascending order by ord_no. Return all fields.  
select * from orders
order by order_no;

# 4) From the orders table, write a SQL query to find all the orders. Sort the result-set in descending order by ord_date. Return all fields. 
select * from orders
order by order_date desc;

# 5) From the orders table, write a SQL query to find all the orders. Sort the result-set in descending order by ord_date and purch_amt. Return all fields.
select * from orders
order by order_date , purch_amt desc;
  
# 6) From the customer table, write a SQL query to find all the customers. Sort the result-set by customer_id. Return cust_name, city, grade. 
select customer_name,city,grade from customer 
order by customer_id;

# 7) From the orders table, write a SQL query that calculates the maximum purchase amount generated by each salesperson for each order date.
# Sort the result-set by salesperson id and order date in ascending order. Return salesperson id, order date and maximum purchase amount. 
select salesman_id, order_date, max(purch_amt) from orders
group by salesman_id, order_date
order by salesman_id,order_date;

# 8) From the customer table, write a SQL query to find all the customers. Sort the result-set in descending order on 3rd field. Return customer name, city and grade. 
select customer_name, city, grade from customer
order by grade desc;
 
# 9) From the orders table, write a SQL query that counts the unique orders and the highest purchase amount for each customer.
#Sort the result-set in descending order on 2nd field. Return customer ID, number of distinct orders and highest purchase amount by each customer. 
select customer_id,max(purch_amt),count(distinct(order_no)) as unique_orders from orders
group by customer_id
order by unique_orders desc;

# 10) From the orders table, write a SQL query to calculate the summation of purchase amount, total commission (15% for all salespeople) by each order date.
# Sort the result-set on order date. Return order date, summation of purchase amount and commission.
select sum(purch_amt),sum(commision) * 100,order_date from orders,salesman
group by order_date
order by order_date;

